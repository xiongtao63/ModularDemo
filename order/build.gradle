if (isRelease) { // 如果是发布版本时，各个模块都不能独立运行
    apply plugin: 'com.android.library'
} else {
    apply plugin: 'com.android.application'
}

def app_android = this.rootProject.ext.app_android
android {
    compileSdk app_android.compileSdk

    defaultConfig {
        if(!isRelease){  // 如果是集成化模式，不能有applicationId
            appId.order   // 组件化模式能独立运行才能有applicationId
        }
//        applicationId "com.xiongtao.order"
        minSdk app_android.minSdk
        targetSdk app_android.targetSdk
        versionCode app_android.versionCode
        versionName app_android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // 这个方法接收三个非空的参数，第一个：确定值的类型，第二个：指定key的名字，第三个：传值（必须是String）
        // 为什么需要定义这个？因为src代码中有可能需要用到跨模块交互，如果是组件化模块显然不行
        // 切记：不能在android根节点，只能在defaultConfig或buildTypes节点下
        buildConfigField("boolean","isRelease",String.valueOf(isRelease))
    }

    buildTypes {
        release {
            minifyEnabled false

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // 配置资源路径，方便测试环境，打包不集成到正式环境

    sourceSets{
        main{
            if(!isRelease){
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'

            }else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java{
                    // release 时 debug 目录下文件不需要合并到主工程
                    exclude 'debug/**'
                    exclude '**/debug/**'
                }
            }
        }
    }
}

dependencies {

//    implementation 'androidx.appcompat:appcompat:1.2.0'
//    implementation 'com.google.android.material:material:1.3.0'
//    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
//    testImplementation 'junit:junit:4.+'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation project(":library")
    app_impl.each{
          k,v -> implementation v
    }
}